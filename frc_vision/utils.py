import cv2
import frc_vision.constants
import numpy as np


class cv2Frame(np.ndarray):
    """Wrapper class designed exclusively for type-hinting."""

    pass


def find_circles(frame: cv2Frame, mask):
    """
    Finds circles given a frame and a mask.

    Params:
        frame: the frame to detect circles from
        mask: the mask to use to extract data from the frame

    Returns:
        circles: circles generated by HoughCircles

    Raises:
        None
    """
    masked_frame = cv2.bitwise_and(frame, frame, mask=mask)
    gray = cv2.cvtColor(masked_frame, cv2.COLOR_BGR2GRAY)
    blurred = cv2.medianBlur(
        gray, 51
    )  # TODO: test this blur process, possibly move to generate_mask?
    circles = cv2.HoughCircles(
        blurred,
        cv2.HOUGH_GRADIENT,
        frc_vision.constants.HOUGH_CONSTANTS.DP,
        frc_vision.constants.HOUGH_CONSTANTS.MIN_DIST,
        param1=frc_vision.constants.HOUGH_CONSTANTS.PARAM1,
        param2=frc_vision.constants.HOUGH_CONSTANTS.PARAM2,
        minRadius=frc_vision.constants.HOUGH_CONSTANTS.MIN_RADIUS,
        maxRadius=frc_vision.constants.HOUGH_CONSTANTS.MAX_RADIUS,
    )
    return circles
